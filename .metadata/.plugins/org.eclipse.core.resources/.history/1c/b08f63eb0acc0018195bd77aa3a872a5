package ie.duffyc8.searcher;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.Writer;

public class CranfieldSplitter {

	private static class Splitter extends Thread {
		String inputFile;
		String outputDirectory;

		Splitter(String inputFile, String outputDirectory) {
			super();
			this.inputFile = inputFile;
			this.outputDirectory = outputDirectory;
		}

		public void run() {
			processFile(inputFile, outputDirectory);
		}
	}

	public static void main(String[] args) {

		if (args.length != 3) {
			System.err.println("Usage: java CranfieldSplitter input_directory documents_output_directory queries_output_directory" + args.length);
			System.exit(1);
		}

		String inputDirectory = args[0];
		Splitter documents_splitter = new Splitter(inputDirectory + "cran.all.1400", args[1]);
		documents_splitter.start();
		Splitter queries_splitter = new Splitter(inputDirectory + "cran.qry", args[2]);
		queries_splitter.start();

		try {
			documents_splitter.join();
			queries_splitter.join();
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
	}

	public static void processFile(String inputFile, String outputDirectory) {
		BufferedReader bufferedReader = null;
		String line;
		String output = "";
		Integer counter = 1;

		try {
			bufferedReader = new BufferedReader(new FileReader(new File(inputFile)));
			bufferedReader.readLine();

			while ((line = bufferedReader.readLine()) != null) {
				
				if(line.startsWith(".I")){
					writeOutput(outputDirectory + counter.toString() + ".txt", output);
					counter++;
					output = "";
				}
				else if(isMetaData(line)){
					//do nothing
				}
				else{
					output = output + line + System.getProperty("line.separator");
				}
			}
			writeOutput(outputDirectory + counter.toString() + ".txt", output);
			bufferedReader.close();
		}
		catch (IOException e) {
			e.printStackTrace();
		}
		finally {
			if (bufferedReader != null)
				try {
					bufferedReader.close();
				} catch (IOException e) {
					e.printStackTrace();
				}
		}
	}
	
	public static boolean isMetaData(String line){
		if(line.startsWith(".T") || line.startsWith(".A") || line.startsWith(".B") || line.startsWith(".W") ){
			return true;
		}
		return false;
	}

	public static void writeOutput(String outputFileName, String output) throws IOException {
		final File outputDirectory = new File(outputFileName);

		if (!outputDirectory.exists()) {
			outputDirectory.createNewFile();
		}

		Writer fileWriter = new FileWriter(outputDirectory);
		BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
		bufferedWriter.write(output);
		bufferedWriter.close();
		fileWriter.close();
	}
}